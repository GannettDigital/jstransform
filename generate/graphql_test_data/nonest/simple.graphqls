
interface Simple @goModel(model: ".Simple") {
  contributors(
    "A List Filter expression such as '{Field: \"position\", Operation: \"<=\", Argument: {Value: 10}}'"
    filter: ListFilter

    "Sort the list, ie '{Field: \"position\", Order: \"ASC\"}'"
    sort: ListSortParams
  ): [SimpleContributors!]! @goField(forceResolver: true)

  height: Int!

  someDateObj: SimpleSomeDateObj!

  "The total length of the contributors list at this same level in the data, this number is unaffected by filtering."
  totalContributors: Int!

  type: String!

  visible: Boolean!

  width: Float!
}

type SimpleContributors @goModel(model: ".SimpleContributors") {
  contributorId: String!

  id: String!

  name: String!
}

type SimpleSomeDateObj @goModel(model: ".SimpleSomeDateObj") {
  dates(
    "A List Filter expression such as '{Field: \"position\", Operation: \"<=\", Argument: {Value: 10}}'"
    filter: ListFilter

    "Sort the list, ie '{Field: \"position\", Order: \"ASC\"}'"
    sort: ListSortParams
  ): [DateTime]! @goField(forceResolver: true)

  "The total length of the dates list at this same level in the data, this number is unaffected by filtering."
  totalDates: Int!
}
