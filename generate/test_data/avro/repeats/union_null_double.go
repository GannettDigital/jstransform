// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.

package repeats

import (
	"github.com/actgardner/gogen-avro/vm/types"
)

type UnionNullDouble struct {
	Null      *types.NullVal
	Double    float64
	UnionType UnionNullDoubleTypeEnum
}

type UnionNullDoubleTypeEnum int

const (
	UnionNullDoubleTypeEnumNull   UnionNullDoubleTypeEnum = 0
	UnionNullDoubleTypeEnumDouble UnionNullDoubleTypeEnum = 1
)

func NewUnionNullDouble() *UnionNullDouble {
	return &UnionNullDouble{}
}

func (_ *UnionNullDouble) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullDouble) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullDouble) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullDouble) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullDouble) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullDouble) SetString(v string)  { panic("Unsupported operation") }
func (r *UnionNullDouble) SetLong(v int64) {
	r.UnionType = (UnionNullDoubleTypeEnum)(v)
}
func (r *UnionNullDouble) Get(i int) types.Field {
	switch i {
	case 0:
		return r.Null
	case 1:
		return (*types.Double)(&r.Double)

	}
	panic("Unknown field index")
}
func (_ *UnionNullDouble) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullDouble) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullDouble) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullDouble) Finalize()                        {}
