// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.

package complex

import (
	"github.com/actgardner/gogen-avro/vm/types"
)

type UnionNullSomeDateObj_record struct {
	Null               *types.NullVal
	SomeDateObj_record *SomeDateObj_record
	UnionType          UnionNullSomeDateObj_recordTypeEnum
}

type UnionNullSomeDateObj_recordTypeEnum int

const (
	UnionNullSomeDateObj_recordTypeEnumNull               UnionNullSomeDateObj_recordTypeEnum = 0
	UnionNullSomeDateObj_recordTypeEnumSomeDateObj_record UnionNullSomeDateObj_recordTypeEnum = 1
)

func NewUnionNullSomeDateObj_record() *UnionNullSomeDateObj_record {
	return &UnionNullSomeDateObj_record{}
}

func (_ *UnionNullSomeDateObj_record) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) SetString(v string)  { panic("Unsupported operation") }
func (r *UnionNullSomeDateObj_record) SetLong(v int64) {
	r.UnionType = (UnionNullSomeDateObj_recordTypeEnum)(v)
}
func (r *UnionNullSomeDateObj_record) Get(i int) types.Field {
	switch i {
	case 0:
		return r.Null
	case 1:
		r.SomeDateObj_record = NewSomeDateObj_record()
		return r.SomeDateObj_record

	}
	panic("Unknown field index")
}
func (_ *UnionNullSomeDateObj_record) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullSomeDateObj_record) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullSomeDateObj_record) Finalize()                {}
