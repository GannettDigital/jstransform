// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.

package complex

import (
	"github.com/actgardner/gogen-avro/vm/types"
)

type UnionNullMeta_record struct {
	Null        *types.NullVal
	Meta_record *Meta_record
	UnionType   UnionNullMeta_recordTypeEnum
}

type UnionNullMeta_recordTypeEnum int

const (
	UnionNullMeta_recordTypeEnumNull        UnionNullMeta_recordTypeEnum = 0
	UnionNullMeta_recordTypeEnumMeta_record UnionNullMeta_recordTypeEnum = 1
)

func NewUnionNullMeta_record() *UnionNullMeta_record {
	return &UnionNullMeta_record{}
}

func (_ *UnionNullMeta_record) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) SetString(v string)  { panic("Unsupported operation") }
func (r *UnionNullMeta_record) SetLong(v int64) {
	r.UnionType = (UnionNullMeta_recordTypeEnum)(v)
}
func (r *UnionNullMeta_record) Get(i int) types.Field {
	switch i {
	case 0:
		return r.Null
	case 1:
		r.Meta_record = NewMeta_record()
		return r.Meta_record

	}
	panic("Unknown field index")
}
func (_ *UnionNullMeta_record) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullMeta_record) Finalize()                        {}
