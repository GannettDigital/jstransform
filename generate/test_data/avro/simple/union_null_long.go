// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.

package simple

import (
	"github.com/actgardner/gogen-avro/vm/types"
)

type UnionNullLong struct {
	Null      *types.NullVal
	Long      int64
	UnionType UnionNullLongTypeEnum
}

type UnionNullLongTypeEnum int

const (
	UnionNullLongTypeEnumNull UnionNullLongTypeEnum = 0
	UnionNullLongTypeEnumLong UnionNullLongTypeEnum = 1
)

func NewUnionNullLong() *UnionNullLong {
	return &UnionNullLong{}
}

func (_ *UnionNullLong) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullLong) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullLong) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullLong) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullLong) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullLong) SetString(v string)  { panic("Unsupported operation") }
func (r *UnionNullLong) SetLong(v int64) {
	r.UnionType = (UnionNullLongTypeEnum)(v)
}
func (r *UnionNullLong) Get(i int) types.Field {
	switch i {
	case 0:
		return r.Null
	case 1:
		return (*types.Long)(&r.Long)

	}
	panic("Unknown field index")
}
func (_ *UnionNullLong) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullLong) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullLong) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullLong) Finalize()                        {}
